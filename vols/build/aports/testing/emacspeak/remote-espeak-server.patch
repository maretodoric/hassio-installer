--- a/bash-utils/remote
+++ b/bash-utils/remote
@@ -39,10 +39,10 @@
 
 #setup tts, but dont ssh.
 #use when we need  to restart server
-# hard-wire speech-server and outloud; $remote not used
+# hard-wire speech-server and espeak; $remote not used
 function rtts () {
     SERVER=speech-server
-    ENGINE=outloud
+    ENGINE=espeak
     $SDIR/$SERVER  2222 $SDIR/$ENGINE  &
     #notification stream listens on 3333
     (export ALSA_DEFAULT="tts_mono_left"; $SDIR/$SERVER 3333 $SDIR/$ENGINE &)
--- a/etc/remote-tts-setup
+++ b/etc/remote-tts-setup
@@ -13,8 +13,8 @@
 
 SDIR=$EMACSPEAK/servers 
 # Primary server listens on 2222
-$SDIR/speech-server  2222 $SDIR/outloud  &
+$SDIR/speech-server  2222 $SDIR/espeak  &
 #notification stream listens on 3333
-(export ALSA_DEFAULT="tts_mono_left"; $SDIR/speech-server  3333 $SDIR/outloud  &)
+(export ALSA_DEFAULT="tts_mono_left"; $SDIR/speech-server  3333 $SDIR/espeak  &)
 beep -f 800 -l 50
 ssh-agent ssh -R 2222:localhost:2222  -R 3333:localhost:3333 $REMOTE
--- a/servers/ssh-espeak
+++ b/servers/ssh-espeak
@@ -32,7 +32,7 @@
 set user [lindex $user_host 0]
 set host [lindex $user_host 1]
 if {$user == ""} {set  user env($USER)}
-set tcl /usr/bin/tcl 
+set tcl /usr/bin/tclsh
 regsub {/ssh-}  $argv0 {/} tts
 puts stderr "Running <ssh $host -l $user -p $port   $tcl $tts>"
 exec     ssh -o StrictHostKeyChecking=no $host \
