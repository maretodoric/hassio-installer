From: cushon <cushon@google.com>
Date: Mon, 7 Dec 2020 13:00:08 -0800
Subject: [PATCH] Stop hardcoding `-Xverify:none` in `SpawnAction`
Upstream: yes (https://github.com/bazelbuild/bazel/commit/0216ee54417fa1f2fef14f6eb14cbc1e8f595821)

The motivation was to improve startup performance of host tools that we trust.
The hard-coded flags for JavaBuilder and turbine were made obsolete by
`java_toolchain.jvm_opts`, which allows them to be configured in the toolchain
instead.

The option has been deprecated in Java 13 and will be removed in a future
release.

Fixes https://github.com/bazelbuild/bazel/issues/11381

PiperOrigin-RevId: 346160835
---
 .../build/lib/analysis/actions/SpawnAction.java        |  1 -
 .../build/lib/analysis/actions/SpawnActionTest.java    | 10 ++++------
 2 files changed, 4 insertions(+), 7 deletions(-)

diff --git a/src/main/java/com/google/devtools/build/lib/analysis/actions/SpawnAction.java b/src/main/java/com/google/devtools/build/lib/analysis/actions/SpawnAction.java
index 500ca758a6..de2257776a 100644
--- a/src/main/java/com/google/devtools/build/lib/analysis/actions/SpawnAction.java
+++ b/src/main/java/com/google/devtools/build/lib/analysis/actions/SpawnAction.java
@@ -1016,7 +1016,6 @@ public class SpawnAction extends AbstractAction implements CommandAction {
       this.executableArgs =
           CustomCommandLine.builder()
               .addPath(javaExecutable)
-              .add("-Xverify:none")
               .addAll(ImmutableList.copyOf(jvmArgs))
               .addAll(ImmutableList.copyOf(launchArgs));
       toolsBuilder.add(deployJar);
diff --git a/src/test/java/com/google/devtools/build/lib/analysis/actions/SpawnActionTest.java b/src/test/java/com/google/devtools/build/lib/analysis/actions/SpawnActionTest.java
index 526473aff7..871509533f 100644
--- a/src/test/java/com/google/devtools/build/lib/analysis/actions/SpawnActionTest.java
+++ b/src/test/java/com/google/devtools/build/lib/analysis/actions/SpawnActionTest.java
@@ -166,8 +166,7 @@ public class SpawnActionTest extends BuildViewTestCase {
     collectingAnalysisEnvironment.registerAction(actions);
     SpawnAction action = (SpawnAction) actions[0];
     assertThat(action.getArguments())
-        .containsExactly(
-            "/bin/java", "-Xverify:none", "-jvmarg", "-cp", "pkg/exe.jar", "MyMainClass")
+        .containsExactly("/bin/java", "-jvmarg", "-cp", "pkg/exe.jar", "MyMainClass")
         .inOrder();
   }
 
@@ -193,8 +192,7 @@ public class SpawnActionTest extends BuildViewTestCase {
 
     // The action reports all arguments, including those inside the param file
     assertThat(action.getArguments())
-        .containsExactly(
-            "/bin/java", "-Xverify:none", "-jvmarg", "-cp", "pkg/exe.jar", "MyMainClass", "-X")
+        .containsExactly("/bin/java", "-jvmarg", "-cp", "pkg/exe.jar", "MyMainClass", "-X")
         .inOrder();
 
     Spawn spawn =
@@ -205,7 +203,7 @@ public class SpawnActionTest extends BuildViewTestCase {
     assertThat(spawn.getArguments())
         .containsExactly(
             "/bin/java",
-            "-Xverify:none",
+
             "-jvmarg",
             "-cp",
             "pkg/exe.jar",
@@ -241,7 +239,7 @@ public class SpawnActionTest extends BuildViewTestCase {
     assertThat(action.getArguments())
         .containsExactly(
             "/bin/java",
-            "-Xverify:none",
+
             "-jvmarg",
             "-cp",
             "pkg/exe.jar",
-- 
2.31.1

