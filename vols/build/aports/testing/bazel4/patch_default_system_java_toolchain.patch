--- a/src/BUILD
+++ b/src/BUILD
@@ -405,7 +405,7 @@ genrule(
     ],
 ) for suffix, jdk in [
     ("-dev", "_jdk_allmodules"),
-    ("", "_jdk_minimal"),
+    ("", "_nojdk"),
     ("_jdk_allmodules", "_jdk_allmodules"),
     ("_jdk_minimal", "_jdk_minimal"),
     ("_dev_jdk", "_dev_jdk"),
--- a/src/main/cpp/startup_options.cc
+++ b/src/main/cpp/startup_options.cc
@@ -462,12 +462,6 @@ blaze_util::Path StartupOptions::GetSystemJavabase() const {
 }
 
 blaze_util::Path StartupOptions::GetEmbeddedJavabase() const {
-  blaze_util::Path bundled_jre_path = blaze_util::Path(
-      blaze_util::JoinPath(install_base, "embedded_tools/jdk"));
-  if (blaze_util::CanExecuteFile(
-          bundled_jre_path.GetRelative(GetJavaBinaryUnderJavabase()))) {
-    return bundled_jre_path;
-  }
   return blaze_util::Path();
 }
 
--- a/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
+++ b/src/main/java/com/google/devtools/build/lib/rules/java/JavaOptions.java
@@ -654,7 +654,7 @@ public class JavaOptions extends FragmentOptions {
   }
 
   Label defaultHostJavaBase() {
-    return Label.parseAbsoluteUnchecked("@bazel_tools//tools/jdk:remote_jdk11");
+    return Label.parseAbsoluteUnchecked("@local_jdk//:jdk");
   }
 
   Label defaultJavaToolchain() {
--- a/tools/jdk/BUILD
+++ b/tools/jdk/BUILD
@@ -340,7 +340,7 @@ alias(
 
 alias(
     name = "host_jdk",
-    actual = ":remote_jdk11",
+    actual = "jdk",
 )
 
 bootclasspath(
@@ -370,8 +370,7 @@ alias(
     actual = select({
         "//src/conditions:darwin": "@remote_java_tools_darwin//:toolchain",
         "//src/conditions:windows": "@remote_java_tools_windows//:toolchain",
-        "//src/conditions:linux_x86_64": "@remote_java_tools_linux//:toolchain",
-        "//conditions:default": "@bazel_tools//tools/jdk:legacy_toolchain",
+        "//conditions:default": "@bazel_tools//tools/jdk:toolchain_vanilla",
     }),
 )
 
@@ -380,8 +379,7 @@ alias(
     actual = select({
         "//src/conditions:darwin": "@remote_java_tools_darwin//:toolchain",
         "//src/conditions:windows": "@remote_java_tools_windows//:toolchain",
-        "//src/conditions:linux_x86_64": "@remote_java_tools_linux//:toolchain",
-        "//conditions:default": "@bazel_tools//tools/jdk:legacy_toolchain",
+        "//conditions:default": "@bazel_tools//tools/jdk:toolchain_vanilla",
     }),
 )
 
