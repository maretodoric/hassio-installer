Fix error: moving a local object in a return statement prevents copy elision [-Werror=pessimizing-move]
---
--- a/inference-engine/thirdparty/ade/sources/ade/source/execution_engine.cpp
+++ b/inference-engine/thirdparty/ade/sources/ade/source/execution_engine.cpp
@@ -138,7 +138,7 @@
         }
     }

-    return std::move(ret);
+    return ret;
 }

 void ExecutionEngine::addExecutableDependency(const std::string& lazyPassName)

--- a/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fs_byx_fsv32.cpp
+++ b/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fs_byx_fsv32.cpp
@@ -60,7 +60,7 @@

     runInfo.efficiency = FORCE_PRIORITY_5;

-    return std::move(runInfo);
+    return runInfo;
 }

 JitConstants FullyConnected_fs_byx_fsv32::GetJitConstants(const fully_connected_params& params,

--- a/inference-engine/thirdparty/clDNN/src/gpu/kernels_cache.cpp
+++ b/inference-engine/thirdparty/clDNN/src/gpu/kernels_cache.cpp
@@ -74,7 +74,7 @@
         undefs += "#endif\n";
     }

-    return std::move(undefs);
+    return undefs;
 }

 std::string reorder_options(const std::string& org_options) {
@@ -159,7 +159,7 @@
         current_bucket.kernels_counter++;
     }

-    return std::move(scode);
+    return scode;
 }

 kernels_cache::kernels_cache(gpu_toolkit& context, uint32_t prog_id) : _context(context), _prog_id(prog_id) {}
