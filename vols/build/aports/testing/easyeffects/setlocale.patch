--- a/include/ui_helpers.hpp
+++ b/include/ui_helpers.hpp
@@ -93,7 +93,7 @@
             using namespace std::string_literals;
 
             auto text =
-                fmt::format(std::locale(""), "{0:.{1}Lf}{2}", value, precision, ((unit != nullptr) ? " "s + unit : ""));
+                fmt::format(std::locale(), "{0:.{1}Lf}{2}", value, precision, ((unit != nullptr) ? " "s + unit : ""));
 
             return g_strdup(text.c_str());
           },
--- a/src/app_info.cpp
+++ b/src/app_info.cpp
@@ -35,7 +35,7 @@
 
   std::unordered_map<uint, bool>* enabled_app_list;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _AppInfo {
--- a/src/autogain_ui.cpp
+++ b/src/autogain_ui.cpp
@@ -31,7 +31,7 @@
 
   std::vector<gulong> gconnections;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _AutogainBox {
--- a/src/chart.cpp
+++ b/src/chart.cpp
@@ -47,7 +47,7 @@
 
   std::vector<float> y_axis, x_axis, x_axis_log, objects_x;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _Chart {
--- a/src/effects_box.cpp
+++ b/src/effects_box.cpp
@@ -45,7 +45,7 @@
 
   std::vector<gulong> gconnections_spectrum;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _EffectsBox {
--- a/src/equalizer_band_box.cpp
+++ b/src/equalizer_band_box.cpp
@@ -29,7 +29,7 @@
 
   std::vector<gulong> gconnections;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _EqualizerBandBox {
--- a/src/pipe_manager_box.cpp
+++ b/src/pipe_manager_box.cpp
@@ -35,7 +35,7 @@
 
   std::vector<gulong> gconnections_sie, gconnections_soe;
 
-  std::locale user_locale = std::locale("");
+  std::locale user_locale = std::locale();
 };
 
 struct _PipeManagerBox {
--- a/src/ui_helpers.cpp
+++ b/src/ui_helpers.cpp
@@ -10,7 +10,7 @@
   auto precision = gtk_spin_button_get_digits(button);
 
   // format string: 0 = value, 1 = precision, 2 = unit
-  auto text = fmt::format(std::locale(""), "{0:.{1}Lf}{2}", value, precision, ((unit != nullptr) ? " "s + unit : ""));
+  auto text = fmt::format(std::locale(), "{0:.{1}Lf}{2}", value, precision, ((unit != nullptr) ? " "s + unit : ""));
 
   gtk_editable_set_text(GTK_EDITABLE(button), text.c_str());
 
@@ -21,7 +21,7 @@
   std::istringstream str(gtk_editable_get_text(GTK_EDITABLE(button)));
 
   try {
-    str.imbue(std::locale(""));  // User locale
+    str.imbue(std::locale());  // User locale
   } catch (...) {
     str.imbue(std::locale::classic());  // C locale if user locale not set
   }
