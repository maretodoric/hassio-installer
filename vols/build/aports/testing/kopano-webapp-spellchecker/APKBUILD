# Maintainer: Noel Kuntze <noel.kuntze@contauro.com>
pkgname=kopano-webapp-spellchecker
pkgdesc="spellchecker plugin for kopano-webapp"
pkgver=2.0.1
pkgrel=2
# ppc64le and riscv64 blocked by libmdbx -> kopano-core
arch="noarch !ppc64le !riscv64"
url="https://stash.kopano.io/projects/KWA/repos/spellchecker/browse"
license="AGPL-3.0-only"
options="!check" # No test suite
depends="kopano-webapp php-enchant"
# kopano-core necessary for mapi php module
makedepends="apache-ant openjdk8 kopano-webapp-src"
source="
	kopano-webapp-spellchecker-$pkgver.zip::https://stash.kopano.io/rest/api/latest/projects/KWA/repos/spellchecker/archive?at=refs%2Ftags%2Fv$pkgver&format=zip
	kopano-webapp-spellchecker.ini
"

_pluginname="${pkgname//kopano-webapp-/}"

builddir="$srcdir/"

#helper function
unpack() {
	local u
	verify
	initdcheck
	mkdir -p "$srcdir"
	local gunzip="$(command -v pigz || echo gunzip)"
	[ $gunzip = "/usr/bin/pigz" ] && gunzip="$gunzip -d"
	for u in $source; do
		local s
		local filename="$(filename_from_uri $u)"
		local new_root_dir="$builddir/${filename%%-[0-9]*}"
		if is_remote "$u"; then
			s="$SRCDEST/$filename"
		else
			s="$startdir/$u"
		fi
		case "$s" in
			*.tar)
				msg "Unpacking $s..."
				mkdir -p "$new_root_dir"
				tar -C "$new_root_dir" -xf "$s" ;;
			*.tar.gz|*.tgz)
				msg "Unpacking $s..."
				mkdir -p "$new_root_dir"
				$gunzip -c "$s" | tar -C "$new_root_dir" -x ;;
			*.tar.bz2)
				msg "Unpacking $s..."
				tar -C "$new_root_dir" -jxf "$s" ;;
			*.tar.lz)
				msg "Unpacking $s..."
				tar -C "$new_root_dir" --lzip -xf "$s" ;;
			*.tar.lzma)
				msg "Unpacking $s..."
				unlzma -T 0 -c "$s" | tar -C "$new_root_dir" -x  ;;
			*.tar.xz)
				msg "Unpacking $s..."
				local threads_opt
				if [ "$(readlink -f "$(command -v unxz)")" != "/bin/busybox" ]; then
					threads_opt="--threads=0"
				fi
				unxz $threads_opt -c "$s" | tar -C "$new_root_dir" -x ;;
			*.zip)
				msg "Unpacking $s..."
				unzip -n -q "$s" -d "$new_root_dir" ;;
		esac
	done
}

prepare() {
	cp -R /usr/share/src/kopano-webapp/ kopano-webapp
	find "kopano-webapp/plugins/" -type d -mindepth 1 -maxdepth 2 -print0 | xargs -0 -- rm -rf
	mv $pkgname kopano-webapp/plugins/$_pluginname
	default_prepare
}

build() {
	cd kopano-webapp
	ant tools
	cd plugins/$_pluginname
	ant deploy -Droot-folder="$(pwd)/../../" -Dtarget-folder="$(pwd)/../../deploy/plugins"
}

package() {
	cd "$srcdir/kopano-webapp/deploy/plugins/$_pluginname/"
	# /usr/share
	mkdir -p "$pkgdir/usr/share/webapps/kopano-webapp/plugins/$_pluginname/"
	cp -R -- * "$pkgdir/usr/share/webapps/kopano-webapp/plugins/$_pluginname/"
	rm -f "$pkgdir/usr/share/webapps/kopano-webapp/plugins/$_pluginname/config.php"

	# /var/lib
	install -dm 0700 -o kopano-webapp -g root "$pkgdir/var/lib/kopano-webapp/plugins/$_pluginname"
	# /etc
	if [ -e "config.php" ]; then
		## perform settings
		# convert windows line break to unix: http://stackoverflow.com/questions/11680815/removing-windows-newlines-on-linux-sed-vs-awk
		sed -i -e $'s/\r//' config.php
		install -dm 0750 -g kopano-webapp "$pkgdir/etc/webapps/kopano-webapp/plugins/$_pluginname/"
		## config mains
		install -m 0750 -g kopano-webapp config.php "$pkgdir/etc/webapps/kopano-webapp/plugins/$_pluginname/config.php"
		ln -sf "/etc/webapps/kopano-webapp/plugins/$_pluginname/config.php" "$pkgdir/usr/share/webapps/kopano-webapp/plugins/$_pluginname/config.php"
		## config examples
		install -m 0750 "$pkgdir/etc/webapps/kopano-webapp/plugins/$_pluginname/config.php" "$pkgdir/etc/webapps/kopano-webapp/plugins/$_pluginname/config.example.php"
	fi
}
sha512sums="
59e05779047878fa3d79a56e0689b1336b209feffab352a38e441a3068290132b259b7fb6056f34ef66e9b404b4fb2342499ae8520899d7fac261e8879325ef1  kopano-webapp-spellchecker-2.0.1.zip
e8bf6c3fa6baf8638116a032a767dc5c4ab9e989c553e8d5f3510e3f6c8de8b23f6917bcb0a6203d1686bf98efb1b0b88d7d5c2c14909a3e3b0a70927fce20bb  kopano-webapp-spellchecker.ini
"
