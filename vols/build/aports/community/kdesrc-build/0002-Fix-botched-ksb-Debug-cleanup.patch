From 75f9150036eea01ad6eca2815a59d566ec5074fc Mon Sep 17 00:00:00 2001
From: Michael Pyne <mpyne@kde.org>
Date: Sun, 16 Jan 2022 17:02:15 -0500
Subject: [PATCH] Fix botched ksb::Debug cleanup, rename KDE CMake buildsystem

Sorry about the 'debugging' thing, that was supposed to go with a port
to isLogLevel.
---
 CMakeLists.txt                                  |  2 +-
 kf5-common-options-build-include                |  2 +-
 modules/ksb/BuildSystem.pm                      |  7 ++++---
 .../ksb/BuildSystem/{KDE4.pm => KDECMake.pm}    | 17 ++++++-----------
 modules/ksb/Debug.pm                            |  7 ++++++-
 modules/ksb/Module.pm                           | 12 ++++++------
 t/smoke/bug-395627-keep-cmake-prefix.t          |  2 +-
 t/smoke/load-all-ksb-modules.t                  |  2 +-
 8 files changed, 26 insertions(+), 25 deletions(-)
 rename modules/ksb/BuildSystem/{KDE4.pm => KDECMake.pm} (96%)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2b6fad8..41d1888 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -67,7 +67,7 @@ if (KDESRC_BUILD_INSTALL_MODULES)
         modules/ksb/BuildSystem/Autotools.pm
         modules/ksb/BuildSystem/Meson.pm
         modules/ksb/BuildSystem/CMakeBootstrap.pm
-        modules/ksb/BuildSystem/KDE4.pm
+        modules/ksb/BuildSystem/KDECMake.pm
         modules/ksb/BuildSystem/QMake.pm
         modules/ksb/BuildSystem/Qt4.pm
         modules/ksb/BuildSystem/Qt5.pm
diff --git a/kf5-common-options-build-include b/kf5-common-options-build-include
index 463c6c1..4817366 100644
--- a/kf5-common-options-build-include
+++ b/kf5-common-options-build-include
@@ -9,7 +9,7 @@
 # Set some options that apply only to kactivities, even if already read in as
 # part of a module-set. Other modules can have options set in the same way.
 options kactivities
-    cmake-options -DKDE4_BUILD_TESTS=TRUE -DBUILD_TESTING=TRUE \
+    cmake-options -DBUILD_TESTING=TRUE \
                   -DKACTIVITIES_ENABLE_EXCEPTIONS=TRUE
 end options
 
diff --git a/modules/ksb/BuildSystem.pm b/modules/ksb/BuildSystem.pm
index 2c42930..acd1619 100644
--- a/modules/ksb/BuildSystem.pm
+++ b/modules/ksb/BuildSystem.pm
@@ -18,9 +18,10 @@ sub new
     my ($class, $module) = @_;
     my $self = bless { module => $module }, $class;
 
-    # This is simply the 'default' build system at this point, also used for
-    # KF5.
-    if ($class ne 'ksb::BuildSystem::KDE4') {
+    # This is simply the 'default' build system at this point, so options
+    # intended for unique/bespoke build systems should be stripped from global
+    # before being applied to a module.
+    if ($class ne 'ksb::BuildSystem::KDECMake') {
         _maskGlobalBuildSystemOptions($self);
     }
 
diff --git a/modules/ksb/BuildSystem/KDE4.pm b/modules/ksb/BuildSystem/KDECMake.pm
similarity index 96%
rename from modules/ksb/BuildSystem/KDE4.pm
rename to modules/ksb/BuildSystem/KDECMake.pm
index 95461bd..ba91255 100644
--- a/modules/ksb/BuildSystem/KDE4.pm
+++ b/modules/ksb/BuildSystem/KDECMake.pm
@@ -1,6 +1,6 @@
-package ksb::BuildSystem::KDE4 0.20;
+package ksb::BuildSystem::KDECMake 0.20;
 
-# Class responsible for building KDE4 CMake-based modules.
+# Class responsible for building CMake-based modules, with special support for KDE modules.
 
 use ksb;
 
@@ -286,7 +286,7 @@ sub configuredModuleFileName
 
 sub runTestsuite
 {
-    my $self = assert_isa(shift, 'ksb::BuildSystem::KDE4');
+    my $self = assert_isa(shift, 'ksb::BuildSystem::KDECMake');
     my $module = $self->module();
 
     # Note that we do not run safe_make, which should really be called
@@ -357,7 +357,7 @@ sub installInternal
 
 sub configureInternal
 {
-    my $self = assert_isa(shift, 'ksb::BuildSystem::KDE4');
+    my $self = assert_isa(shift, 'ksb::BuildSystem::KDECMake');
     my $module = $self->module();
 
     # Use cmake to create the build directory (sh script return value
@@ -444,16 +444,11 @@ sub _safe_run_cmake
     }
 
     if ($module->getOption('run-tests') &&
-        !grep { /^\s*-DKDE4_BUILD_TESTS(:BOOL)?=(ON|TRUE|1)\s*$/ } (@commands)
+        !grep { /^\s*-DBUILD_TESTING(:BOOL)?=(ON|TRUE|1)\s*$/ } (@commands)
        )
     {
         whisper ("Enabling tests");
-        push @commands, "-DKDE4_BUILD_TESTS:BOOL=ON";
-
-        # Also enable phonon tests.
-        if ($module =~ /^phonon$/) {
-            push @commands, "-DPHONON_BUILD_TESTS:BOOL=ON";
-        }
+        push @commands, "-DBUILD_TESTING:BOOL=ON";
     }
 
     if ($module->getOption('run-tests') eq 'upload')
diff --git a/modules/ksb/Debug.pm b/modules/ksb/Debug.pm
index b375f44..6b58b3d 100644
--- a/modules/ksb/Debug.pm
+++ b/modules/ksb/Debug.pm
@@ -79,13 +79,18 @@ sub setColorfulOutput
     }
 }
 
-# Subroutine which returns true if debug mode is on.
 sub isLogLevel
 {
     my $level = shift // DEBUG;
     return $debugLevel <= $level;
 }
 
+# Subroutine which returns true if debug mode is on.
+sub debugging :prototype(;$)
+{
+    return isLogLevel(DEBUG);
+}
+
 sub setDebugLevel
 {
     $debugLevel = shift;
diff --git a/modules/ksb/Module.pm b/modules/ksb/Module.pm
index 99d0e51..59a7d72 100644
--- a/modules/ksb/Module.pm
+++ b/modules/ksb/Module.pm
@@ -30,7 +30,7 @@ use ksb::BuildSystem::Autotools;
 use ksb::BuildSystem::QMake;
 use ksb::BuildSystem::Qt4;
 use ksb::BuildSystem::Qt5;
-use ksb::BuildSystem::KDE4;
+use ksb::BuildSystem::KDECMake;
 use ksb::BuildSystem::CMakeBootstrap;
 use ksb::BuildSystem::Meson;
 
@@ -291,7 +291,7 @@ sub buildSystemFromName
         'generic'         => 'ksb::BuildSystem',
         'qmake'           => 'ksb::BuildSystem::QMake',
         'cmake-bootstrap' => 'ksb::BuildSystem::CMakeBootstrap',
-        'kde'             => 'ksb::BuildSystem::KDE4',
+        'kde'             => 'ksb::BuildSystem::KDECMake',
         'qt'              => 'ksb::BuildSystem::Qt4',
         'qt5'             => 'ksb::BuildSystem::Qt5',
         'autotools'       => 'ksb::BuildSystem::Autotools',
@@ -299,10 +299,10 @@ sub buildSystemFromName
     );
 
     my $class = $buildSystemClasses{lc $name} // undef;
-    return $class->new($self) if ($class);
+    croak_runtime("Invalid build system $name requested")
+        unless $class;
 
-    # Past here, no class found
-    croak_runtime("Invalid build system $name requested");
+    return $class->new($self);
 }
 
 sub buildSystem
@@ -340,7 +340,7 @@ sub buildSystem
     if (!$buildType && (-e "$sourceDir/CMakeLists.txt" ||
             $self->getOption('#xml-full-path')))
     {
-        $buildType = ksb::BuildSystem::KDE4->new($self);
+        $buildType = ksb::BuildSystem::KDECMake->new($self);
     }
 
     # We have to assign to an array to force glob to return all results,
diff --git a/t/smoke/bug-395627-keep-cmake-prefix.t b/t/smoke/bug-395627-keep-cmake-prefix.t
index 77b5eef..f04ac33 100644
--- a/t/smoke/bug-395627-keep-cmake-prefix.t
+++ b/t/smoke/bug-395627-keep-cmake-prefix.t
@@ -38,7 +38,7 @@ my @args = qw(--pretend --rc-file t/data/bug-395627/kdesrc-buildrc);
     my @moduleList = @{$app->{modules}};
 
     is (scalar @moduleList, 6, 'Right number of modules');
-    isa_ok ($moduleList[0]->buildSystem(), 'ksb::BuildSystem::KDE4');
+    isa_ok ($moduleList[0]->buildSystem(), 'ksb::BuildSystem::KDECMake');
 
     my $result;
     my @prefixes;
diff --git a/t/smoke/load-all-ksb-modules.t b/t/smoke/load-all-ksb-modules.t
index ecf8d73..000db25 100644
--- a/t/smoke/load-all-ksb-modules.t
+++ b/t/smoke/load-all-ksb-modules.t
@@ -9,7 +9,7 @@ use ksb::BuildException;
 use ksb::BuildSystem;
 use ksb::BuildSystem::Autotools;
 use ksb::BuildSystem::CMakeBootstrap;
-use ksb::BuildSystem::KDE4;
+use ksb::BuildSystem::KDECMake;
 use ksb::BuildSystem::Meson;
 use ksb::BuildSystem::QMake;
 use ksb::BuildSystem::Qt4;
-- 
GitLab

